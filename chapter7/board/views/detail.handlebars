<h1>{{title}}</h1>
{{#with post}}
<h2 class="text-xl">{{title}}</h2> {{!-- 1.게시글의 제목 --}}
<div>
    작성자 : <b>{{writer}}</b>       {{!-- 2.작성자 이름 --}}
</div>
<div>
    조회수 : {{hits}} | 작성일시 : {{dateString createdDt}}    {{!-- 3.조회수와 작성일시 --}}
    <button onclick ="modifyPost()">수정</button>   {{!-- 4.게시글 관련 버튼 영역 --}}
    <button onclick ="deletePost()">삭제</button>
</div>

<div>
    <pre>{{content}}</pre>   {{!-- 5.본문 표시 영역 --}}
</div>

<section>
    <div>
        <h3>{{lengthOfList comments}}개의 댓글이 있습니다.</h3>  {{!-- 6.댓글 개수 표시 --}}
    </div>

    <form method="post" action="/write-comment">   {{!-- 7.댓글 작성 폼 --}}
        <input type="hidden" name="id" value="{{_id}}"/>  {{!-- 게시글의 아이디 --}}
        <div>
            <div>
                <input type="text" name="name" placeholder="이름"/>
                <input type="password" name="password" placeholder="비밀번호"/>
            </div>
        </div>
        <div>
            <textarea cols="40" rows="3" name="comment" placeholder="댓글을 입력해주세요."></textarea>
            <br/>
            <br/>
            {{!-- 8.댓글 전송 버튼 --}}
            <button>댓글 쓰기</button>
        </div>
    </form>
</section>

{{!-- 9.댓글 표시 영역 --}}
<section>
    {{#each comments}}
    <div>
        <div>
            작성자 : <b>{{name}}</b>
        </div>
        <div>
            작성일시  : {{dateString createdDt}}
            <button onclick="deleteComment('{{idx}}')">삭제</button>
        </div>
    </div>
    <div>
        <pre>{{comment}}</pre>
    </div>
    {{/each}}
</section>
{{/with}}
<footer>
    <div>
        <a href="/">목록으로</a> {{!-- 10.목록으로 가는 링크 --}}
    </div>
</footer>
<script>

    const postOption = {
        method : 'POST',
        headers: {
            'content-Type' : 'application/json',
        },
    }

    async function modifyPost(){
        const password = prompt("패스워드를 입력해주세요");
        //1.프롬프트에서 취소를 누른 경우 처리
        if(!password){
            return;
        }

        //2.check-password API 실행
        const result = await fetch("/check-password",{
            ...postOption,
            body: JSON.stringify({ id: "{{post._id}}", password})
        });
        
        //3. json 함수를 실행하는 경우도 await을 해줘야함
        const data = await result.json();

        console.log("data...?",data);

        //4.패스워드가 맞는 경우
        if(data.isExist){
            document.location = "/modify/{{post._id}}"
        }else{
            alert("패스워드가 올바르지 않습니다.");
        }
    }
    const deleteOption = {
        method : 'DELETE',
        headers: {
            'Content-Type' : 'application/json',
        },
    }

    async function deletePost(){
        const password = prompt("삭제하려면 패스워드를 입력해주세요");
        if(!password){
            return;
        }

        const result = await fetch("/delete",{
            ...deleteOption,
            body : JSON.stringify({ id : "{{post._id}}", password })
        });

        const data = await result.json();
        if(!data.isSuccess){
            alert("삭제에 실패했습니다. 패스워드를 확인해주세요.");
            return;
        }

        document.location = "/";
    }

    async function deleteComment(idx){
        const password = prompt("삭제하려면 패스워드를 입력해주세요");
        //프롬프트에서 취소를 누른 경우 처리
        if(!password){
            return;
        }

        //1.delete-comment-API 실행
        const result = await fetch("/delete-comment",{
            ...deleteOption,
            body: JSON.stringify({ id: "{{post._id}}", idx, password })
        });

        //2.댓글 삭제 실패 시 메시지 띄우고 함수 실행 종료
        const data = await result.json();
        if(!data.isSuccess){
            alert("삭제에 실패했습니다. 패스워드를 확인해주세요.");
            return;
        }

        //3.성공 시 메시지를 띄우고 화면 리프레시
        alert("삭제 성공!");
        document.location.reload();
    }
</script>